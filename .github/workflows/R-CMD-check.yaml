on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.5'}
        - { os: windows-latest, r: '3.6'}
        - { os: windows-latest, r: 'devel'}
        - { os: macOS-latest, r: '3.5'}
        - { os: macOS-latest, r: '3.6'}
        - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-16.04, r: '3.4', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.5', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}


    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@v1
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: tlmgr --version

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Query dependencies
        run: Rscript -e "install.packages('remotes')" -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo apt install ghostscript qpdf
          sudo apt install libgsl-dev

      - name: Install dependencies
        run: Rscript -e "library(remotes)" -e "update(readRDS('depends.Rds'))" -e "remotes::install_cran('rcmdcheck')"

      - name: Check (Linux)
        if: runner.os == 'Linux'
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), check_dir = 'check')"

      - name: Check (macOS)
        if: runner.os == 'macOS'
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), check_dir = 'check')"

      - name: Check (Windows)
        if: runner.os == 'Windows'
        run: Rscript -e "rcmdcheck::rcmdcheck(build_args = '--no-build-vignettes', args = c('--no-manual', '--ignore-vignettes', '--as-cran'), check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-16.04' && matrix.config.r == '3.6-9000'
        run: |
          Rscript  -e "install.packages('covr')" -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
